vif[1,9]<-vif.bar
rownames(vif)<-"VIF"
colnames(vif)<-c("age","lwt","race","smoke","ptl","ht","ui","ftv","average")
print(vif)
vif(fit.ols)
vif(fit.ridge)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt)
fit.ridge
library(car)
vif(fit.ridge)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt)
fit.ridge
fit.1<-lm(bwt~age+lwt+race+smoke+ptl+ht+ui,data=birthwt)
library(car)
vif(fit.1)
library(car)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,10,0.1))
plot(seq(0,10,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
library(car)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,10,0.1))
plot(seq(0,10,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
lambda.ridge <- seq(0,10,0.1)[which.min(model.ridge$GCV)]
library(car)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,10,0.1))
plot(seq(0,10,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
lambda.ridge <- seq(0,10,0.1)[which.min(fit.ridge$GCV)]
library(car)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,20,0.1))
plot(seq(0,10,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
library(car)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,20,0.1))
plot(seq(0,20,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
lambda.ridge <- seq(0,10,0.1)[which.min(fit.ridge$GCV)]
library(car)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,100,0.1))
plot(seq(0,100,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
lambda.ridge <- seq(0,10,0.1)[which.min(fit.ridge$GCV)]
library(car)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,100,0.1))
plot(seq(0,100,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
lambda.ridge <- seq(0,100,0.1)[which.min(fit.ridge$GCV)]
library(car)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,100,0.1))
plot(seq(0,100,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
lambda.ridge <- seq(0,100,0.1)[which.min(fit.ridge$GCV)]
colors <- rainbow(8)
matplot(seq(0,100,0.1),coef(fit.ridge)[,-1],xlim=c(0,101),type="l",xlab=expression(lambda),ylab=expression(hat(beta)),col=colors,lty=1,lwd=2,main="Ridge coefficients")
abline(v=lambda.ridge,lty=2)
abline(h=0,lty=2)
text(rep(10,9),coef(model.ridge)[length(seq(0,100,0.1)),-1],colnames(train)[-9],pos=4,col=colors)
library(car)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,100,0.1))
plot(seq(0,100,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
lambda.ridge <- seq(0,100,0.1)[which.min(fit.ridge$GCV)]
colors <- rainbow(8)
matplot(seq(0,100,0.1),coef(fit.ridge)[,-1],xlim=c(0,101),type="l",xlab=expression(lambda),ylab=expression(hat(beta)),col=colors,lty=1,lwd=2,main="Ridge coefficients")
abline(v=lambda.ridge,lty=2)
abline(h=0,lty=2)
text(rep(10,9),coef(fit.ridge)[length(seq(0,100,0.1)),-1],colnames(train)[-9],pos=4,col=colors)
View(birthwt)
library(car)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,100,0.1))
plot(seq(0,100,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
lambda.ridge <- seq(0,100,0.1)[which.min(fit.ridge$GCV)]
colors <- rainbow(8)
matplot(seq(0,100,0.1),coef(fit.ridge)[,-1],xlim=c(0,101),type="l",xlab=expression(lambda),ylab=expression(hat(beta)),col=colors,lty=1,lwd=2,main="Ridge coefficients")
abline(v=lambda.ridge,lty=2)
abline(h=0,lty=2)
text(rep(10,9),coef(fit.ridge)[length(seq(0,100,0.1)),-1],colnames(birthwt)[-c(1,10)],pos=4,col=colors)
beta.ridge<-coef(fit.ridge)[which.min(fit.ridge$GCV),]
matplot(seq(0,100,0.1),coef(fit.ridge)[,-1],xlim=c(0,100),type="l",xlab=expression(lambda),ylab=expression(hat(beta)),col=colors,lty=1,lwd=2,main="Ridge coefficients")
abline(v=lambda.ridge,lty=2)
library(car)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,100,0.1))
plot(seq(0,100,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
lambda.ridge <- seq(0,100,0.1)[which.min(fit.ridge$GCV)]
colors <- rainbow(8)
matplot(seq(0,100,0.1),coef(fit.ridge)[,-1],xlim=c(0,100),type="l",xlab=expression(lambda),ylab=expression(hat(beta)),col=colors,lty=1,lwd=2,main="Ridge coefficients")
abline(v=lambda.ridge,lty=2)
abline(h=0,lty=2)
legend(x=80,y=-500,col=colors,legend=colnames(birthwt)[-c(1,10)])
beta.ridge<-coef(fit.ridge)[which.min(fit.ridge$GCV),]
library(car)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,100,0.1))
plot(seq(0,100,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
lambda.ridge <- seq(0,100,0.1)[which.min(fit.ridge$GCV)]
colors <- rainbow(8)
matplot(seq(0,100,0.1),coef(fit.ridge)[,-1],xlim=c(0,100),type="l",xlab=expression(lambda),ylab=expression(hat(beta)),col=colors,lty=1,lwd=2,main="Ridge coefficients")
abline(v=lambda.ridge,lty=2)
beta.ridge<-coef(fit.ridge)[which.min(fit.ridge$GCV),]
lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=31)
which.min(fit.ridge$GCV)
min(fit.ridge$GCV)
lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=which.min(fit.ridge$GCV))
library(car)
# fit a ridge regression
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,100,0.1))
# cross validation for best lambda
plot(seq(0,100,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
lambda.ridge <- seq(0,100,0.1)[which.min(fit.ridge$GCV)]
# coefficients' paths
matplot(seq(0,100,0.1),coef(fit.ridge)[,-1],xlim=c(0,100),type="l",xlab=expression(lambda),ylab=expression(hat(beta)),lty=1,lwd=2,main="Ridge coefficients")
abline(v=lambda.ridge,lty=2)
abline(h=0,lty=2)
# ridge regression model
beta.ridge<-coef(fit.ridge)[which.min(fit.ridge$GCV),]
fit.rid<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=31)
vif(fit.rid)
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,300,0.1))
plot(seq(0,300,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
library(genridge)
vif(fit.rid)
vif.ridge(fit.rid)
fit.rid<-ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=31)
fit.rid<-ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt)
fit.rid<-ridge(bwt,age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt)
View(birthwt)
fit.rid<-ridge(birthwt[,10],birthwt[,2:8],lambda=31)
fit.rid<-lm.ridge(birthwt[,10],birthwt[,2:8],lambda=31)
fit.rid<-ridge(birthwt[,10],birthwt[,2:9],lambda=31)
fit.rid<-ridge(birthwt[,10],cbind(1,birthwt[,2:9]),lambda=31)
y<-birthwt[,10]
x<-cbind(1,birthwt[,2:9])
View(x)
y<-as.matrix(birthwt[,10])
x<-as.matrix(cbind(1,birthwt[,2:9]))
fit.rid<-ridge(y,x,lambda=31)
I<-diag(1,9,9)
solve(t(x)%*%x+31*I)%*%t(x)%*%y
beta.ridge
solve(t(x)%*%x)%*%t(x)%*%y
31*I
solve(t(x)%*%x+31*I)%*%t(x)%*%y
View(birthwt)
lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=31)
plot(fit.ridge)
select(fit.ridge)
y<-as.matrix(birthwt[,10])
x<-as.matrix(birthwt[,2:9])
I<-diag(1,8,8)
solve(t(x)%*%x+31*I)%*%t(x)%*%y
solve(t(x)%*%x+(31/nrow(y))*I)%*%t(x)%*%y
nrow(y)
solve(t(x)%*%x+31*I)%*%t(x)%*%y
solve(t(x)%*%x+1*I)%*%t(x)%*%y
solve(t(x)%*%x)%*%t(x)%*%y
x<-as.matrix(cbind(1,birthwt[,2:9]))
I<-diag(1,9,9)
solve(t(x)%*%x)%*%t(x)%*%y
solve(t(x)%*%x+31*I)%*%t(x)%*%y
coef(fit.ridge)
ridge(x,y)
ridge(y,x,lambda=31)
?lm.ridge
??lm.ridge
fit.rid<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=31)
fit.rid
fit.rid$coef
View(x)
View(y)
rownames(x)<-c(1:189)
View(x)
solve(t(x)%*%x+31*I)%*%t(x)%*%y
diag(solve(t(x)%*%x))
library(lars)
library(lars)
library(lars)
library(lars)
y<-as.numeric(birthwt[,10])
x<-as.matrix(train[,2:9])
library(lars)
y<-as.numeric(birthwt[,10])
x<-as.matrix(birthwt[,2:9])
model.lasso<-lars(x,y,type="lasso")
lambda.lasso<-c(model.lasso$lambda,0)
beta<-coef(model.lasso)
matplot(lambda.lasso,beta,type="o",pch=20,xlab=expression(lambda),ylab=expression(hat(beta)))
abline(v=lambda.lasso[4], lty=2)
abline(h=0, lty=2)
beta[4,]
library(car)
# fit a ridge regression
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,1000,0.1))
# cross validation for best lambda
plot(seq(0,1000,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
lambda.ridge<-seq(0,1000,0.1)[which.min(fit.ridge$GCV)]
# coefficients' paths
matplot(seq(0,1000,0.1),coef(fit.ridge)[,-1],xlim=c(0,100),type="l",xlab=expression(lambda),ylab=expression(hat(beta)),lty=1,lwd=2,main="Ridge coefficients")
abline(v=lambda.ridge,lty=2)
abline(h=0,lty=2)
# ridge regression model
beta.ridge<-coef(fit.ridge)[which.min(fit.ridge$GCV),]
library(car)
# fit a ridge regression
fit.ridge<-lm.ridge(bwt~age+lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=seq(0,1000,0.1))
# cross validation for best lambda
plot(seq(0,1000,0.1),fit.ridge$GCV,main="GCV of Ridge Regression",type="l",xlab=expression(lambda),ylab="GCV")
lambda.ridge<-seq(0,1000,0.1)[which.min(fit.ridge$GCV)]
# coefficients' paths
matplot(seq(0,1000,0.1),coef(fit.ridge)[,-1],xlim=c(0,1000),type="l",xlab=expression(lambda),ylab=expression(hat(beta)),lty=1,lwd=2,main="Ridge coefficients")
abline(v=lambda.ridge,lty=2)
abline(h=0,lty=2)
# ridge regression model
beta.ridge<-coef(fit.ridge)[which.min(fit.ridge$GCV),]
t(x)*x
t(x)%*%x
ridge(y,x,lambda=31)
ridge(y,x)
ridge(y,x,lambda=0)
Y<-as.numeric(birthwt[,10])
X<-as.matrix(cbind(1,birthwt[,2:9]))
I<-matrix(1,9,9)
I
solve(t(X)%*%X+31*I)%*%t(X)%*%Y
X
I<-diag(1,9,9)
X<-scale(X)
View(X)
X<-as.matrix(birthwt[,2:9])
X<-scale(X)
solve(t(X)%*%X+31*I)%*%t(X)%*%Y
I<-diag(1,8,8)
solve(t(X)%*%X+31*I)%*%t(X)%*%Y
Y<-scale(Y)
solve(t(X)%*%X+31*I)%*%t(X)%*%Y
vif.ridge(fit.rid)
VIF(lm.ridge(age~lwt+race+smoke+ptl+ht+ui+ftv,data=birthwt,lambda=31))
solve(t(X)%*%X)
X<-as.matrix(cbind(1,birthwt[,2:9]))
Y<-as.numeric(birthwt[,10])
xc<-scale(X,scale=F)
solve(t(xc)%*%xc)
X<-as.matrix(birth[,2:9])
X<-as.matrix(birthwt[,2:9])
solve(t(X)%*%X)
xc<-scale(X,scale=F)
solve(t(xc)%*%xc)
View(X)
View(xc)
xs<-scale(X)
solve(t(xs)%*%xs)
View(beta)
lambda.lasso
hist(Y)
library(glmnet)
fit.ridge<-glmnet(birthwt[,2:9],birthwt[,10],alpha=1,family="gaussian")
library(glmnet)
fit.ridge<-glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=1,family="gaussian")
fit.ridge
library(glmnet)
fit.ridge<-glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=1,family="gaussian")
coef(fit.ridge)
library(glmnet)
fit.ridge<-glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=1,family="gaussian")
plot(fit.ridge,xvar="lambda")
fit.lasso<-glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=0,family="gaussian")
plot(fit.lasso,xvar="lambda")
log(31)
ln(31)
exp(3.4)
log(50)
library(glmnet)
fit.ridge<-glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=1,family="gaussian")
plot(fit.ridge,xvar="lambda",label=T)
fit.lasso<-glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=0,family="gaussian")
plot(fit.lasso,xvar="lambda",label=T)
exp(5)
library(glmnet)
fit.ridge<-glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=1,family="gaussian")
fit.ridge.cv<-cv.glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=1,family="gaussian")
plot(fit.ridge,xvar="lambda",label=T)
plot(fit.ridge.cv,xvar="lambda",label=T)
library(glmnet)
fit.ridge<-glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=1,family="gaussian")
fit.ridge.cv<-cv.glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=1,family="gaussian")
plot(fit.ridge,xvar="lambda",label=T)
plot(fit.ridge.cv)
fit.lasso<-glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=0,family="gaussian")
fit.lasso.cv<-cv.glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=0,family="gaussian")
plot(fit.lasso,xvar="lambda",label=T)
plot(fit.lasso.cv)
library(glmnet)
fit.ridge<-glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=1,family="gaussian")
fit.ridge.cv<-cv.glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=1,family="gaussian")
plot(fit.ridge,xvar="lambda",label=T)
plot(fit.ridge.cv)
fit.ridge.cv$lambda.min
coef(fit.ridge.cv,s="lambda.min")
fit.lasso<-glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=0,family="gaussian")
fit.lasso.cv<-cv.glmnet(as.matrix(birthwt[,2:9]),as.numeric(birthwt[,10]),alpha=0,family="gaussian")
plot(fit.lasso,xvar="lambda",label=T)
plot(fit.lasso.cv)
fit.lasso.cv$lambda.min
coef(fit.lasso.cv,s="lambda.min")
shiny::runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
shiny::runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
?timeInput
library(shinyTime)
?timeInput
?strptime
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
shiny::runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
?addPolylines
?popupOptions
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
runApp('G:/Columbia/STAT GR5243/project02/Shiny App/Parking')
setwd("G:/Columbia/STAT GR5291")
diet<-read.table("diet.dat", header = T)
diet$covar<-as.numeric(diet$covar)
diet$trt<-as.factor(diet$trt)
diet$block<-as.factor(diet$block)
# one-way anova
diet.fit<-lm(dmi~trt,diet)
anova(diet.fit)
# ancova
diet.cov<-lm(dmi~covar+trt,diet)
anova(diet.cov)
# parallelism
diet.para<-lm(dmi~covar+trt+covar*trt,diet)
anova(diet.para)
a<-aov(dmi~covar+trt,diet)
a
summary(a)
a$model
a$coefficients
a$effects
setwd("G:/Columbia/STAT GR5291")
diet<-read.table("diet.dat", header = T)
diet$covar<-as.numeric(diet$covar)
diet$trt<-as.factor(diet$trt)
diet$block<-as.factor(diet$block)
# one-way anova
diet.fit<-aov(dmi~trt,diet)
summary(diet.fit)
# ancova
diet.cov<-aov(dmi~covar+trt,diet)
summary(diet.cov)
# parallelism
diet.para<-aov(dmi~covar+trt+covar*trt,diet)
summary(diet.para)
View(diet)
library(dplyr)
diet1<-diet%>%filter(trt==1)
View(diet1)
View(diet)
install.packages(lsmeans)
install.packages("lsmeans")
library(lsmeans)
lsmeans(diet.cov,"trt")
diet1<-cbind(diet,diet.cov$fitted.values)%>%filter(trt==1)
diet2<-cbind(diet,diet.cov$fitted.values)%>%filter(trt==2)
diet3<-cbind(diet,diet.cov$fitted.values)%>%filter(trt==3)
diet4<-cbind(diet,diet.cov$fitted.values)%>%filter(trt==4)
diet5<-cbind(diet,diet.cov$fitted.values)%>%filter(trt==5)
diet6<-cbind(diet,diet.cov$fitted.values)%>%filter(trt==6)
beta<-(sum((diet1$dmi-mean(diet1$dmi))*(diet1$covar-mean(diet1$covar)))+
sum((diet2$dmi-mean(diet2$dmi))*(diet2$covar-mean(diet2$covar)))+
sum((diet3$dmi-mean(diet3$dmi))*(diet3$covar-mean(diet3$covar)))+
sum((diet4$dmi-mean(diet4$dmi))*(diet4$covar-mean(diet4$covar)))+
sum((diet5$dmi-mean(diet5$dmi))*(diet5$covar-mean(diet5$covar)))+
sum((diet6$dmi-mean(diet6$dmi))*(diet6$covar-mean(diet6$covar))))/
(sum((diet1$covar-mean(diet1$covar))*(diet1$covar-mean(diet1$covar)))+
sum((diet2$covar-mean(diet2$covar))*(diet2$covar-mean(diet2$covar)))+
sum((diet3$covar-mean(diet3$covar))*(diet3$covar-mean(diet3$covar)))+
sum((diet4$covar-mean(diet4$covar))*(diet4$covar-mean(diet4$covar)))+
sum((diet5$covar-mean(diet5$covar))*(diet5$covar-mean(diet5$covar)))+
sum((diet6$covar-mean(diet6$covar))*(diet6$covar-mean(diet6$covar))))
View(diet1)
colnames(diet1)[7]
colnames(diet1)[7]<-"fitted"
colnames(diet2)[7]<-"fitted"
colnames(diet3)[7]<-"fitted"
colnames(diet4)[7]<-"fitted"
colnames(diet5)[7]<-"fitted"
colnames(diet6)[7]<-"fitted"
View(diet1)
lsm1<-diet1$fitted-beta*(mean(diet1$covar)-mean(diet$covar))
lsm1<-mean(diet1$fitted)-beta*(mean(diet1$covar)-mean(diet$covar))
lsm1<-mean(diet1$fitted)-beta*(mean(diet1$covar)-mean(diet$covar))
lsm2<-mean(diet2$fitted)-beta*(mean(diet2$covar)-mean(diet$covar))
lsm3<-mean(diet3$fitted)-beta*(mean(diet3$covar)-mean(diet$covar))
lsm4<-mean(diet4$fitted)-beta*(mean(diet4$covar)-mean(diet$covar))
lsm5<-mean(diet5$fitted)-beta*(mean(diet5$covar)-mean(diet$covar))
lsm6<-mean(diet6$fitted)-beta*(mean(diet6$covar)-mean(diet$covar))
plot(cars)
setwd("G:/Columbia/STAT GR5243/project03")
feature_sift<-read.csv("sift_features.csv")
View(feature_sift)
feature_sift<-t(feature_sift)
View(feature_sift)
dim(feature_sift)
setwd("G:/Columbia/STAT GR5243/project03")
feature_sift<-read.csv("sift_features.csv")
feature_sift<-t(feature_sift)
set.seed(123)
k_means_cluster<-kmeans(feature_sift,200)
setwd("G:/Columbia/STAT GR5243/project03")
feature_sift<-read.csv("sift_features.csv")
set.seed(123)
k_means_cluster<-kmeans(feature_sift,200)
setwd("G:/Columbia/STAT GR5243/project03")
feature_sift<-read.csv("sift_features.csv")
feature_sift<-t(feature_sift)
set.seed(123)
k_means_cluster<-kmeans(feature_sift,200)
setwd("G:/Columbia/STAT GR5243/project03")
feature_sift<-read.csv("sift_features.csv")
set.seed(123)
k_means_cluster<-kmeans(feature_sift,200)
View(feature_sift)
k_means_center<-k_means_cluster$centers
hist_mat<-matrix(0,nrow=200,ncol=2000)
feature_sift[1,]
View(feature_sift)
dim(feature_sift)
feature_sift[,1]
feature_sift[2,]
feature_sift_mat<-as.matrix(feature_sift)
View(feature_sift_mat)
feature_sift_mat[1,]
feature_sift_mat[1,]-1
View(feature_sift_mat)
which.min(feature_sift_mat[1,]-k_means_centers[1,1])
which.min(feature_sift_mat[1,]-k_means_center[1,1])
which.min(feature_sift_mat[1,]-k_means_center[2,1])
a<-matrix(c(1,2,3,2,3,2,4,5,4),3,3)
a
which.min(a[,2]-1)
which.min(a[,2]-3)
which.max(a[,2]-2)
which(a[,2]==min(a[,2]-2))
which(a[,2]==min(a[,2]))
View(k_means_center)
View(k_means_center)
list_mat<-list()
for(i in 1:2000){
list_mat[[i]]<-matrix(0,200,5000)
for(j in 1:200){
list.mat[[i]][j,]<-abs(feature_sift_mat[,1]-k_means_center[j,1]
}
}
for(i in 1:2000){
list_mat[[i]]<-matrix(0,200,5000)
for(j in 1:200){
list.mat[[i]][j,]<-abs(feature_sift_mat[,1]-k_means_center[j,1])
}
}
list_mat<-list()
for(i in 1:2000){
list_mat[[i]]<-matrix(0,200,5000)
for(j in 1:200){
list.mat[[i]][j,]<-abs(feature_sift_mat[,1]-k_means_center[j,1])
}
}
list_mat[[i]][j,]<-abs(feature_sift_mat[,1]-k_means_center[j,1])
for(i in 1:2000){
list_mat[[i]]<-matrix(0,200,5000)
for(j in 1:200){
list_mat[[i]][j,]<-abs(feature_sift_mat[,1]-k_means_center[j,1])
}
}
sum(is.na(feature_sift_new))
setwd("G:/Columbia/STAT GR5243/project03")
feature_sift<-read.csv("sift_features.csv")
feature_sift_new<-t(feature_sift)
sum(is.na(feature_sift_new))
View(feature_sift_new)
View(feature_sift_new)
y<-rep(c(0,1),each=1000)
train<-cbind(feature_sift_new,y)
View(train)
library(gbm)
gbm.model<-gbm(y~.,data=train,shrinkage=0.01,distribution="bernoulli",cv.folds=5,n.trees=5000,verbose=F)
train<-as.data.frame(cbind(feature_sift_new,y))
View(train)
gbm.model<-gbm(y~.,data=train,shrinkage=0.01,distribution="bernoulli",cv.folds=5,n.trees=5000,verbose=F)
best.iter<-gbm.perf(gbm.model,method="cv")
summary(gbm.model)
best.iter
test<-train[c(1:100,1001:1100),1:5000]
View(test)
confusion(predict(gbm.model,train)>0,train$y>0)
library(caret)
install.packages("caret")
library(caret)
confusion(predict(gbm.model,train)>0,train$y>0)
confusionMatrix(predict(gbm.model,train)>0,train$y>0)
